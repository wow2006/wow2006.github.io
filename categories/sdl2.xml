<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Salt and Pepper (Posts about sdl2)</title><link>https://wow2006.github.io/</link><description></description><atom:link href="https://wow2006.github.io/categories/sdl2.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:eng.ahmedhussein89@gmail.com"&gt;Ahmed Abdel Aal&lt;/a&gt; </copyright><lastBuildDate>Sun, 01 Mar 2020 18:06:12 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Clear OpenGL Buffer</title><link>https://wow2006.github.io/posts/clear-opengl-buffer/clear-opengl-buffer/</link><dc:creator>Ahmed Abdel Aal</dc:creator><description>&lt;div&gt;&lt;p&gt;In this post, we will create a simple application which initializes OpenGL and clear buffer to red.&lt;/p&gt;
&lt;h6&gt;What we will learn:&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Create a Simple SDL2 Window.&lt;/li&gt;
&lt;li&gt;Create an OpenGL Context.&lt;/li&gt;
&lt;li&gt;Clear OpenGL buffer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;Content:&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wow2006.github.io/posts/clear-opengl-buffer/clear-opengl-buffer/#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wow2006.github.io/posts/clear-opengl-buffer/clear-opengl-buffer/#window"&gt;Create SDL2 window&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wow2006.github.io/posts/clear-opengl-buffer/clear-opengl-buffer/#context"&gt;Create OpenGL Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wow2006.github.io/posts/clear-opengl-buffer/clear-opengl-buffer/#rendering_loop"&gt;Main rendering loop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wow2006.github.io/posts/clear-opengl-buffer/clear-opengl-buffer/#event"&gt;Quit event&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wow2006.github.io/posts/clear-opengl-buffer/clear-opengl-buffer/#clear"&gt;Clear buffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wow2006.github.io/posts/clear-opengl-buffer/clear-opengl-buffer/#cleanup"&gt;Cleanup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Final Result" src="https://wow2006.github.io/images/clear-opengl-buffer/clear-opengl-buffer.png"&gt;&lt;/p&gt;
&lt;h6&gt;Introduction: &lt;a name="introduction"&gt;&lt;/a&gt;&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;OpenGL® is the most widely adopted 2D and 3D graphics API in the industry, bringing thousands of applications to a wide variety of computer platforms. &lt;a href="https://www.khronos.org/opengl/"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I can say that &lt;code&gt;It is cross-platform 3D graphics API&lt;/code&gt;. It will help you create an application using graphics hardware.
The main idea of computer graphics is to convert 3D data to 2D data. I mean Convert 3D models to 2D images.&lt;/p&gt;
&lt;p&gt;We want a window to draw rendered images on. We can use native API to create a window ie. Windows API or X11 API or use the cross-platform framework.
I like SDL2 which is cross-platform API. It wraps platform API calls.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Simple DirectMedia Layer is a cross-platform development library designed to provide low-level access to audio, keyboard, mouse, joystick, and graphics hardware via OpenGL and Direct3D. &lt;a href="https://wiki.libsdl.org/Introduction"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;Create SDL2 window: &lt;a name="window"&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;SDL2 need to be initialied to use any functions calls.
So SDL2 is consists of many systems which one we want to initialize?!
For now, we just need to initialize the Video system. &lt;a href="https://wiki.libsdl.org/SDL_Init"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SDL_Init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SDL_INIT_VIDEO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cerr&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Can not initialize SDL2&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Now we can create SDL2 window. &lt;a href="https://wiki.libsdl.org/SDL_CreateWindow"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;640U&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;480U&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;pWindow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SDL_CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"HelloWorld!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SDL_WINDOWPOS_UNDEFINED&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SDL_WINDOWPOS_UNDEFINED&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SDL_WINDOW_OPENGL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pWindow&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cerr&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Can not create SDL2 window&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;


&lt;h5&gt;Create OpenGL Context: &lt;a name="context"&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;Now we want to create OpenGL Context.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SDL_GLContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SDL_GL_CreateContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pWindow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Just for now we need this line.&lt;/p&gt;
&lt;h5&gt;Main rendering loop: &lt;a name="rendering_loop"&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;We need to prevent the application from quiting.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;bRunning&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ture&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bRunning&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;We can not quit the application. &lt;code&gt;Invitiy loop&lt;/code&gt;
We need to check when user click quit.&lt;/p&gt;
&lt;h5&gt;Quit event: &lt;a name="event"&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;We need to pull SDL events till no event on queue or quit event.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SDL_Event&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SDL_PollEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;SDL_QUIT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bRunning&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;


&lt;h5&gt;Clear buffer: &lt;a name="clear"&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;We need to clear OpenGL buffer.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;glClearColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;glClear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GL_COLOR_BUFFER_BIT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;SDL_GL_SwapWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pWindow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;


&lt;h5&gt;Cleanup: &lt;a name="cleanup"&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;We need to delete context and SDL2 window.
Finally, we need to quit SDL2.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SDL_GL_DeleteContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;SDL_DestroyWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pWindow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;SDL_Quit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;You can find the source code in &lt;a href="https://github.com/wow2006/GraphicsDemos/blob/master/opengl/fixedPipelineOpenGLSDL.cpp"&gt;SourceCode&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>opengl</category><category>sdl2</category><guid>https://wow2006.github.io/posts/clear-opengl-buffer/clear-opengl-buffer/</guid><pubDate>Sun, 01 Mar 2020 16:09:25 GMT</pubDate></item></channel></rss>